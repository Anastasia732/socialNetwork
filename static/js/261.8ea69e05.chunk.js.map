{"version":3,"file":"static/js/261.8ea69e05.chunk.js","mappings":"yIACA,QAA0B,yBAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAA8I,8BAA9I,EAAuL,0BAAvL,EAA2N,yBAA3N,EAA4P,uB,sBCE5P,MASA,EAToBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAQC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,qLAAqLJ,UAAWC,KACzME,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,GAAIT,EAAKK,SAAEN,EAAMW,SACxB,ECCV,EARiBX,IAETO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAC3BN,EAAMY,U,sBCCnB,MA6CA,EA7CiBZ,IACb,IAAIa,EAAiBb,EAAMc,QAAQC,KAAKC,IAC5BT,EAAAA,EAAAA,KAACU,EAAU,CAACN,KAAMK,EAAEL,KAAMT,GAAIc,EAAEd,OAGxCgB,EAAiBlB,EAAMmB,SAASJ,KAAKK,IAC7Bb,EAAAA,EAAAA,KAACc,EAAO,CAACT,QAASQ,EAAER,YAGhC,OAAQT,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAoBC,SAC/BO,KAELV,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,CAC5BY,GACDX,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACHC,cAAe,CAAEX,QAAS,IAC1BY,iBAAkBC,EAAAA,EAClBC,SAAUA,CAACC,EAAMC,KAAyB,IAAvB,cAAEC,GAAeD,EAChCE,QAAQC,IAAIJ,GACZ3B,EAAMgC,WAAWL,EAAOf,SAExBiB,GAAc,EAAM,EACtBvB,SAED2B,IAAA,IAAC,aAAEC,GAAcD,EAAA,OACd9B,EAAAA,EAAAA,MAACgC,EAAAA,GAAI,CAAA7B,SAAA,EACDH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAK,CAACC,KAAK,WAAW1B,KAAK,UAAU2B,YAAc,wBACpD/B,EAAAA,EAAAA,KAACgC,EAAAA,GAAY,CAAC5B,KAAK,UAAU6B,UAAU,MAAMpC,UAAWC,QAE5DE,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQ8B,KAAK,SAASI,SAAUP,EAAa5B,SAAC,iBAI/C,SAMjB,E,oBC1BN,SAAeoC,E,OAAAA,KACXC,EAAAA,EAAAA,KAjBmBC,IACZ,CACH9B,QAAS8B,EAAMC,YAAY/B,QAC3BK,SAAUyB,EAAMC,YAAY1B,SAC5B2B,eAAgBF,EAAMC,YAAYC,eAClCC,OAAQH,EAAMI,KAAKD,WAGDE,IACf,CACHjB,WAAaL,IACTsB,GAASC,EAAAA,EAAAA,GAAwBvB,GAAQ,OCdxBwB,GACrBnD,GACCA,EAAM+C,QACJxC,EAAAA,EAAAA,KAAC4C,EAAS,IAAKnD,KADIO,EAAAA,EAAAA,KAAC6C,EAAAA,GAAQ,CAAC1C,GAAI,YDiB5C,CAGE2C,E","sources":["webpack://my-app/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialodItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx","Components/HOC/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__OdHi8\",\"dialogsItem\":\"Dialogs_dialogsItem__uhvVb\",\"dialog\":\"Dialogs_dialog__y5SGO\",\"dialogAvatar\":\"Dialogs_dialogAvatar__dOaUY\",\"messages\":\"Dialogs_messages__aftbj\",\"message\":\"Dialogs_message__9Blio\",\"error\":\"Dialogs_error__MUHme\"};","import classes from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (<div className={classes.dialog}>\r\n        <img src=\"https://img.freepik.com/free-photo/the-adorable-illustration-of-kittens-playing-in-the-forest-generative-ai_260559-483.jpg?size=338&ext=jpg&ga=GA1.1.632798143.1713225600&semt=ais\" className={classes.dialogAvatar} />\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\nexport default DialogItem;","import classes from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import classes from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialodItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {AddMessageSchema} from \"../FormValidators/ValidationFormSchema\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElement = props.dialogs.map((d) => {\r\n        return (<DialogItem name={d.name} id={d.id}/>)\r\n    })\r\n\r\n    let messageElement = props.messages.map((m) => {\r\n        return (<Message message={m.message}/>)\r\n    })\r\n\r\n    return (<div className={classes.dialogs}>\r\n        <div className={classes.dialogsItem}>\r\n            {dialogsElement}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            {messageElement}\r\n            <Formik\r\n                initialValues={{ message: ''}}\r\n                validationSchema={AddMessageSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    console.log(values);\r\n                    props.addMessage(values.message);\r\n                    debugger;\r\n                    setSubmitting(false);\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <div>\r\n                            <Field type=\"textarea\" name=\"message\" placeholder = \"enter message here\"/>\r\n                            <ErrorMessage name=\"message\" component=\"div\" className={classes.error} />\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\" disabled={isSubmitting}>\r\n                                Add post\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Dialogs;","import {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            dialogs: state.dialogsPage.dialogs,\r\n            messages: state.dialogsPage.messages,\r\n            newMessageText: state.dialogsPage.newMessageText,\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n    let mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            addMessage: (values) => {\r\n                dispatch(addMessageActionCreator(values))\r\n            }\r\n        }\r\n    }\r\n\r\n    export default compose(\r\n        connect(mapStateToProps, mapDispatchToProps),\r\n        withAuthRedirect\r\n    )(Dialogs);","import {Navigate} from \"react-router-dom\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    return (props) => {\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n}\r\n\r\n"],"names":["props","path","id","_jsxs","className","classes","children","_jsx","src","NavLink","to","name","message","dialogsElement","dialogs","map","d","DialogItem","messageElement","messages","m","Message","Formik","initialValues","validationSchema","AddMessageSchema","onSubmit","values","_ref","setSubmitting","console","log","addMessage","_ref2","isSubmitting","Form","Field","type","placeholder","ErrorMessage","component","disabled","compose","connect","state","dialogsPage","newMessageText","isAuth","auth","dispatch","addMessageActionCreator","Component","Navigate","Dialogs"],"sourceRoot":""}